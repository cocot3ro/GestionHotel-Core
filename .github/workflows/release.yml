name: Build and Release GestionHotel-Core Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:

jobs:

  build-linux:
    runs-on: ubuntu-latest

    # if: github.event.pull_request.merged == true

    strategy:
      matrix:
        package_type: [deb, rpm]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Build with Maven
      working-directory: ./GestionHotel-Core
      run: mvn clean package

    - name: Get project version
      id: get-version
      working-directory: GestionHotel-Core
      run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Generate DEB & RPM Installers
      working-directory: ./GestionHotel-Core
      run: |
        jpackage --type ${{ matrix.package_type }} \
        --input target/ \
        --main-jar GestionHotel-Core-${{ env.VERSION }}.jar \
        --main-class com.cocot3ro.gestionhotel.core.GestionHotelCoreApplication \
        --name "GestionHotel_Core" \
        --dest target/installer \
        --app-version ${{ env.VERSION }}

    - name: Upload DEB & RPM Installers
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.package_type }}-installer
        path: GestionHotel-Core/target/installer/*.${{ matrix.package_type }}

  build-windows:
    runs-on: windows-latest

    # if: github.event.pull_request.merged == true

    strategy:
      matrix:
        package_type: [msi, exe]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Get project version
      id: get-version
      working-directory: GestionHotel-Core
      shell: cmd
      run: |
        mvn help:evaluate -Dexpression=project.version -q -DforceStdout >> version.tmp
        set /P VERSION=<version.tmp
        echo "VERSION=%VERSION%" >> $env:GITHUB_ENV
        del version.tmp

    - name: Check project version
      # Get the project version from the environment and print it
      run: |
        echo ${{ env.VERSION }}
        echo $env:VERSION

    - name: Build with Maven
      working-directory: ./GestionHotel-Core
      run: mvn clean package

    - name: Generate MSI & EXE Installers
      working-directory: ./GestionHotel-Core
      shell: cmd
      run: |
        jpackage --type ${{ matrix.package_type }} ^
        --input target/ ^
        --main-jar GestionHotel-Core-$VERSION.jar ^
        --main-class com.cocot3ro.gestionhotel.core.GestionHotelCoreApplication ^
        --name "GestionHotel_Core" ^
        --dest target/installer ^
        --app-version %VERSION%

    - name: Upload MSI & EXE Installers
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.package_type }}-installer
        path: GestionHotel-Core/target/installer/*.${{ matrix.package_type }}

  release:
    needs: 
      - build-linux
      - build-windows
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Get project version
      id: get-version
      working-directory: GestionHotel-Core
      run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Download Artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: v${{ env.VERSION }}
        tag_name: v${{ env.VERSION }}
        draft: false
        prerelease: false
        files: |
          ./msi-installer/*.msi
          ./exe-installer/*.exe
          ./deb-installer/*.deb
          ./rpm-installer/*.rpm
